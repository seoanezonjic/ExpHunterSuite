
<!--begin.rcode {{called_from}}_setup_facto_miner

### plotting_functions
inertia_plot <- function(ggplot_obj) { 
								ggplot_obj + 
								ggplot2::geom_bar(ggplot2::aes(x = names, y = var, fill = sig), stat = "identity") + 
								ggplot2::geom_line(ggplot2::aes(x = names, y = cum_var), stat = "identity", group = 1) + 
								ggplot2::labs(x = "", y = "Percentage of total variance") + 
								ggplot2::scale_y_continuous(sec.axis = ggplot2::sec_axis(~./100, 
																						name = "Cumulative percentage of variance", 
																						labels = scales::percent)) + 
								ggplot2::theme(legend.position = "bottom", 
															 axis.text.x = ggplot2::element_text(angle = 45, hjust = 1))
}

var_violin <- function(ggplot_obj) {

	ggplot_obj <- ggplot_obj +
	ggplot2::geom_violin(ggplot2::aes(y = !!rlang::sym(var), x = clust),trim=FALSE) + 
	ggplot2::geom_boxplot(ggplot2::aes(y = !!rlang::sym(var), x = clust),width=0.1) +
	ggpubr::stat_compare_means(ggplot2::aes(y = !!rlang::sym(var), x = clust),method = "anova") + 
	ggplot2::labs(x = "HCPC cluster")
	tryCatch({
  		stat.test <- ggplot_obj$data |> 
    	rstatix::t_test(as.formula(paste0(var, " ~ clust")), p.adjust.method = "BH") |> 
    	rstatix::add_y_position()
  
		if (nrow(stat.test) == 1) {
		    stat.test$p.adj <- stat.test$p
		}
  
		ggplot_obj + ggpubr::stat_pvalue_manual(stat.test, label = "FDR = {p.adj}")

	}, error = function(e) {
	  return(ggplot_obj)
	})
	
}

pairs_plot_pca <- function(data_frame) {
	pca_scatter <- function(data, mapping, ...){
		p <- ggplot2::ggplot(data, mapping)  
		p$mapping$alpha <- NULL
		p$mapping$color <- p$mapping$fill
		p + ggplot2::geom_point() + 
		ggplot2::geom_vline(xintercept = 0,  linetype="dashed")+ 
		ggplot2::geom_hline(yintercept = 0,  linetype="dashed")
	}
	p <- GGally::ggpairs(data_frame, columns = seq(2, dim_to_keep +1),  
		mapping = ggplot2::aes(fill = .data[[cual_var]], alpha = 0.5),
		lower = list(continuous = pca_scatter),
		upper = list(continuous = "blank"), 
		switch = "both") + 
		ggplot2::theme_bw() 
		leg <- ggpubr::get_legend(p[1,1])
		leg <- ggpubr::as_ggplot(leg)
		p <- GGally::putPlot(p, leg, 1, dim_to_keep)
	p[dim_to_keep, dim_to_keep] <- p[dim_to_keep, dim_to_keep] + ggplot2::coord_flip()
  p
}

plot_pca <- function(pca_data) {
	factoextra::fviz_pca_ind(pca_data, repel = TRUE)
}

plot_pca_hab <- function(pca_data) {
	factoextra::fviz_pca_ind(pca_data, repel = TRUE, habillage = main_cat)
}

plot_pca_qual <- function() {
	plot(FactoMineR::plot.PCA(data_frame, title = ""))
}

plot_mca_qual <- function() {
	plot(FactoMineR::plot.MCA(data_frame, title = "", invisible = "var"))
}

plot_pca_quant <- function(pca_data) {
	factoextra::fviz_pca_var(pca_data, axes = c(1, 2),select.var = list(name=plotter$hash_vars$numeric_factors), col.var="steelblue", title="") +
		ggplot2::theme_minimal()
}

plot_biplot_quant <- function(pca_data) {
	factoextra::fviz_pca_biplot(pca_data, repel = TRUE,select.var = list(name=plotter$hash_vars$numeric_factors), col.var="steelblue", title="") +
			ggplot2::theme_minimal()

}

plot_mca <- function(pca_data) {
	factoextra::fviz_mca_ind(pca_data, repel = TRUE)
}

plot_mca_hab <- function(pca_data) {
	factoextra::fviz_mca_ind(pca_data, repel = TRUE, habillage = main_cat)
}


plot_hcpc <- function(){
 plot(data_frame , choice="tree", title="")
}

plot_hcpc_map <- function(){
	plot(data_frame , axes=c(1,2), choice="map", draw.tree= FALSE, title="")
}

plot_quant_heat <- function(data_frame){
	gg_heatmap(data_frame, x_axis="dimension", y_axis="factor",fill = "correlation", 
		text_plot="text_corr", text_size = 4,
		col = c("#3b71ff", "#f1f1f1", "#ff3b3b"))
}

plot_qual_heat <- function(data_frame){
	gg_heatmap(data_frame, x_axis="dimension", y_axis="factor",fill = "R2", text_plot="text_adjust", text_size = 4,
		col = c("#3b71ff", "#f1f1f1", "#ff3b3b"))
}

plot_cat_heat <- function(data_frame){
	gg_heatmap(data_frame, x_axis="dimension", y_axis="factor",fill = "Estimate", text_plot="text_estimate", text_size = 4,
		col = c("#3b71ff", "#f1f1f1", "#ff3b3b") )
}

plot_mfa_axes <- function(mfa_data) {
	factoextra::fviz_mfa_axes(mfa_data, repel = T)+ 
	ggplot2::labs(title = "")  + 
	ggplot2::theme(legend.position = "bottom")

}


plot_mfa_ind_partial <- function(mfa_data) {
	factoextra::fviz_mfa_ind(mfa_data, partial = "all")+ 
	ggplot2::theme(legend.position = "bottom")

}

plot_mfa_quali <- function(mfa_data) {

	factoextra::fviz_mfa_ind(mfa_data,  repel = TRUE)+ 
	ggplot2::theme(legend.position = "bottom")

}

plot_mfa_quanti <- function(mfa_data) {
	factoextra::fviz_mfa_var(mfa_data, choice = "quanti.var",palette = "jco",
  col.var.sup = "violet", repel = TRUE,select.var = list(name=plotter$hash_vars$numeric_factors))+ 
	ggplot2::theme(legend.position = "bottom")

}


## inertia_plot

inertia <- as.data.frame(plotter$hash_vars$pca_data$eig)[,c(2,3)]
dim_to_change <- ifelse(any(grepl("comp ", rownames(inertia))), "comp ", "dim ")
inertia$names <- factor(gsub(dim_to_change, "PC", rownames(inertia)), levels= gsub(dim_to_change, "PC", rownames(inertia)))
colnames(inertia) <- c("var", "cum_var", "names")
inertia$sig <- ifelse(inertia$names %in% paste0("PC", seq(1, plotter$hash_vars$dim_to_keep)), "significant", "no_significant")
plotter$hash_vars[["inertia"]] <- inertia

## pca_all
dims <- as.data.frame(plotter$hash_vars$pca_data$ind$coord)
colnames(dims) <- gsub("Dim.", "PC", colnames(dims))
inertia$text <- paste(inertia$names, "\n(", round(inertia$var, 2),"%)", sep = "")
colnames(dims)[colnames(dims) %in% inertia$names] <- inertia$text[match(colnames(dims), inertia$names)]
dims$names <- rownames(dims)
rownames(dims) <- NULL

if (!is.null(plotter$hash_vars$string_factors)) {

	quali_sup <- plotter$hash_vars$pca_data$call$X[,plotter$hash_vars$string_factors, drop = F]
	quali_names <- as.list(colnames(quali_sup))
	names(quali_names) <- paste("dims",colnames(quali_sup), sep = "_")
	quali_sup$names <- rownames(quali_sup)
	all_dims <- lapply(quali_names, function(var) {

		curr_dims <- merge(dims, quali_sup[,c("names",var)], by = "names")

	})
	for (name_var in names(all_dims)){
		plotter$hash_vars[[name_var]] <- all_dims[[name_var]]

	}
}


## HCPC 
all_factor_clusters <- get_cluster_string_assoc(plotter$hash_vars$res.hcpc, plotter$hash_vars$string_factors)
all_factor_clusters <- all_factor_clusters[all_factor_clusters$FDR <= 0.05,]

if (nrow(all_factor_clusters) > 0 ) {
	all_factor_clusters$FDR <- format(all_factor_clusters$FDR, scientific = TRUE, digits = 3)
	all_factor_clusters$fisher.test.pval <- format(all_factor_clusters$fisher.test.pval, scientific = TRUE, digits = 3)
	all_factor_clusters <- all_factor_clusters[,c("Cluster","Category","fisher.test.pval", "FDR")]
}
plotter$hash_vars[["all_factor_clusters"]] <- all_factor_clusters

## dim data quant
if (!is.null(plotter$hash_vars$dim_data_merged)){
	
	dim_data_quant <- plotter$hash_vars$dim_data_merged$quantitative

	if (!is.null(plotter$hash_vars$numeric_factors)) {
		dim_data_quant_act <- dim_data_quant[!dim_data_quant$factor %in% plotter$hash_vars$numeric_factors,]
	} else  {
		dim_data_quant_act <- dim_data_quant
	}
	
	dim_data_quant <- dim_data_quant[dim_data_quant$factor %in% plotter$hash_vars$numeric_factors,]
	if (nrow(dim_data_quant) > 0 ) {
		dim_data_quant$dimension <- gsub("Dim.", "PC", dim_data_quant$dimension)
		dim_data_quant$correlation <- round(dim_data_quant$correlation, digits = 2)
		dim_data_quant$significance <- ifelse(dim_data_quant$p.value < 0.001, "***",
						                ifelse(dim_data_quant$p.value < 0.01, "**",
					                    ifelse(dim_data_quant$p.value < 0.05, "*", "")))
		dim_data_quant$text_corr <- paste(as.character(dim_data_quant$correlation),as.character(dim_data_quant$significance), sep = " ")

	}

	if (nrow(dim_data_quant_act) >0 ) {
		dim_data_quant_act$dimension <- gsub("Dim.", "PC", dim_data_quant_act$dimension)

		dim_data_quant_act <- dim_data_quant_act |> 
                            dplyr::mutate(abs_correlation = abs(correlation)) |> 
                            dplyr::group_by(dimension) |> 
                            dplyr::top_n(10, wt = abs_correlation) |> 
                            dplyr::arrange(dimension, desc(abs_correlation)) |> 
                            dplyr::select(-abs_correlation) |> 
                            dplyr::arrange(dimension, correlation)
		dim_data_quant_act <- as.data.frame(dim_data_quant_act)[,c("factor", "dimension", "correlation", "p.value")]	
	}
	plotter$hash_vars[["dim_data_quant_act"]] <- dim_data_quant_act
	plotter$hash_vars[["dim_data_quant"]] <- dim_data_quant

	##dim data qual
	dim_data_qual <- plotter$hash_vars$dim_data_merged$qualitative

	if (!is.null(plotter$hash_vars$numeric_factors)) {
		dim_data_qual_act <- dim_data_qual[!dim_data_qual$factor %in% plotter$hash_vars$string_factors,]
	} else {
		dim_data_qual_act <- dim_data_qual
	}
	dim_data_qual <- dim_data_qual[dim_data_qual$factor %in% plotter$hash_vars$string_factors,]

	if (nrow(dim_data_qual) >0 ) {
		dim_data_qual$dimension <- gsub("Dim.", "PC", dim_data_qual$dimension)
		dim_data_qual$R2 <- round(dim_data_qual$R2, digits = 3)
		dim_data_qual$significance <- ifelse(dim_data_qual$p.value < 0.001, "***",
						                ifelse(dim_data_qual$p.value < 0.01, "**",
					                    ifelse(dim_data_qual$p.value < 0.05, "*", "")))

		dim_data_qual$text_adjust <- paste(as.character(dim_data_qual$R2),as.character(dim_data_qual$significance), sep = " ")
	}

	if (nrow(dim_data_qual_act) >0 ) {
		dim_data_qual_act$dimension <- gsub("Dim.", "PC", dim_data_qual_act$dimension)

		dim_data_qual_act <- dim_data_qual_act |> 
							 dplyr::group_by(dimension) |> 
							 dplyr::top_n(10, wt = R2) |> 
							 dplyr::arrange(dimension, desc(R2))
 		dim_data_qual_act <- as.data.frame(dim_data_qual_act)[,c("factor", "dimension", "R2", "p.value")]	

	}
	plotter$hash_vars[["dim_data_qual"]] <- dim_data_qual
	plotter$hash_vars[["dim_data_qual_act"]] <- dim_data_qual_act


	## dim data cat
	dim_data_cat <- plotter$hash_vars$dim_data_merged$qual_category
	if (nrow(dim_data_cat) > 0 ) {
		dim_data_cat$dimension <- gsub("Dim.", "PC", dim_data_cat$dimension)

		dim_data_cat$significance <- ifelse(dim_data_cat$p.value < 0.001, "***",
						                ifelse(dim_data_cat$p.value < 0.01, "**",
					                    ifelse(dim_data_cat$p.value < 0.05, "*", "")))
		dim_data_cat$text_estimate <- paste(round(dim_data_cat$Estimate, digits = 2),dim_data_cat$significance, sep = " ")
	}
	plotter$hash_vars[["dim_data_cat"]] <- dim_data_cat
}


end.rcode-->

<!--begin.rcode {{called_from}}_overview
###################################################################################################################
#######################################    OVERVIEW  ##############################################################
cat(plotter$create_title("<b>Dimensionality reduction</b>", "overview", 
			hlevel = plotter$hash_vars$last_title + 1, indexable = TRUE, clickable = FALSE, t_id = "overview", clickable_text =""))
cat("<p>This section encompasses a general overview of the dimensionality reduction analysis applied.</p>")
end.rcode-->

<!--begin.rcode {{called_from}}_inertia_plot, echo = FALSE, warning =FALSE, message=FALSE, results = 'asis', fig.width = 5, fig.height = 4 
	cat(plotter$create_title("<b>Inertia plot: % of total variance by PC</b>", "inertia_plot", 
			hlevel = plotter$hash_vars$last_title + 2))
	cat("<p>Graphical representation of Principal Components (PCs). Line represents accumulated explained variance.
		Only significant PCs will be considered in the following plots.</p>")
	cat(plotter$static_ggplot_main(id = "inertia", header = NULL, row_names = NULL,resizable = TRUE, plotting_function = inertia_plot))

end.rcode-->


<!--begin.rcode {{called_from}}_main_pca, echo = FALSE, warning =FALSE, message=FALSE, results = 'asis', eval = plotter$hash_vars$multivar_type %in% c("pca", "mca") 
	
	cat(plotter$create_title("<b>Sample coordinates</b>", "main_pc", 
		hlevel = plotter$hash_vars$last_title + 2))
	cat("This plot represents the coordinates of the samples on the two first Principal Components (Dim1 and Dim2) along with percentage of explained variance.")

	cat(plotter$static_plot_main(id = "pca_data",custom_format = TRUE ,resizable = TRUE, plotting_function = plot_pca))

end.rcode-->


<!--begin.rcode {{called_from}}_main_pca_hab, echo = FALSE, warning =FALSE, message=FALSE, results = 'asis', eval = !is.null(plotter$hash_vars$main_cat) && plotter$hash_vars$multivar_type == "pca" 
	cat("This is a simplified plot of the samples displayed in the two main PCs. The color of the samples indicates their experimental condition.")
	main_cat <- plotter$hash_vars$main_cat
	cat(plotter$static_plot_main(id = "pca_data", custom_format = TRUE, resizable = TRUE, plotting_function = plot_pca_hab))
end.rcode-->

<!--begin.rcode {{called_from}}_main_mca_hab, echo = FALSE, warning =FALSE, message=FALSE, results = 'asis', eval = !is.null(plotter$hash_vars$main_cat) && plotter$hash_vars$multivar_type == "mca"
	main_cat <- plotter$hash_vars$main_cat
	cat("This is a simplified plot of the samples displayed in the two main PCs. The color of the samples indicates their experimental condition.")
	cat(plotter$static_plot_main(id = "pca_data", custom_format = TRUE, resizable = TRUE, plotting_function = plot_mca_hab))
end.rcode-->

<!--begin.rcode {{called_from}}_mfa_cor, echo = FALSE, warning =FALSE, message=FALSE, results = 'asis', eval = plotter$hash_vars$multivar_type == "mfa"
	
	cat(plotter$create_title("<b>Individual PCs contribution</b>", "main_pc_mfa", 
			hlevel = plotter$hash_vars$last_title + 2))
	cat("This plot represents the Pearson's correlation between the PCs from the individual dimensionality reduction analysis of the variable groups and the two main integrated PCs (Dim1 and Dim2). 
		The color represent the different variable groups and the variance summarized by the integrated PC is showed between brackets.<br>")

	cat(plotter$static_plot_main(id = "pca_data",custom_format = TRUE ,resizable = TRUE, plotting_function = plot_mfa_axes))

end.rcode-->

<!--begin.rcode {{called_from}}_mfa_ind_partial, echo = FALSE, warning =FALSE, message=FALSE, results = 'asis', eval = plotter$hash_vars$multivar_type == "mfa"
	
	cat(plotter$create_title("<b>Representation of the sample coordinates on the two first integrated PCs</b>", "main_pc_mfa", 
			hlevel = plotter$hash_vars$last_title + 2))
	
	cat("This plot represents the coordinates of the samples on the two first integrated PCs (Dim1 and Dim2) as a black dot. 
		The colored dots represent the coordinates of the samples for each active group of variables and the colored lines represent its distance from the integrated coordinates. 
		The variance summarized by the two first integrated PCs is showed betwwen brackets. <br>")

	cat(plotter$static_plot_main(id = "pca_data",custom_format = TRUE ,resizable = TRUE, plotting_function = plot_mfa_ind_partial))

end.rcode-->


<!--begin.rcode {{called_from}}_cat_vars_main, echo = FALSE, warning =FALSE, message=FALSE, results = 'asis'

###################################################################################################################
#######################################    CATEGORICAL VARIABLES  #################################################

cat(plotter$create_title("<b>Categorical variables</b>", "cat_var", 
			hlevel = plotter$hash_vars$last_title + 1, indexable = TRUE, clickable = FALSE, t_id = "cat_var", clickable_text =""))

cat("<p>This section explore the relationship between supplementary categorical variables (-S option), samples and PCs.</p>")
end.rcode-->

<!--begin.rcode {{called_from}}_check_qual, echo = FALSE, warning =FALSE, message=FALSE, results = 'asis',fig.width = 8, fig.height = 8, eval = is.null(plotter$hash_vars$string_factors)
	cat("Any supplementary qualitative variable was included on this analysis.")
end.rcode-->

<!--begin.rcode {{called_from}}_qual_pca, echo = FALSE, warning =FALSE, message=FALSE, results = 'asis',fig.width = 8, fig.height = 8, eval = !is.null(plotter$hash_vars$string_factors) && plotter$hash_vars$multivar_type == "pca"

	cat(plotter$create_title("<b>Coordinates of categories</b>", "main_pc_qual", 
			hlevel = plotter$hash_vars$last_title + 2))

	cat("This plot represent the coordinates of the samples and supplementary categories on the two first Principal Components (Dim1 and Dim2).
		The samples and categories are represented in black and purple, respectively. 
		The percentage of explained variance is given between brackets.<br>")
	cat(plotter$static_plot_main(id = "pca_data",custom_format = TRUE ,resizable = TRUE, plotting_function = plot_pca_qual, plot_type = "autoplot" ))


end.rcode-->




<!--begin.rcode {{called_from}}_qual_mca, echo = FALSE, warning =FALSE, message=FALSE, results = 'asis',fig.width = 8, fig.height = 8, eval = !is.null(plotter$hash_vars$string_factors) && plotter$hash_vars$multivar_type == "mca"

	cat(plotter$create_title("<b>Coordinates of categories</b>", "main_pc_qual", 
			hlevel = plotter$hash_vars$last_title + 2))
	cat("This plot represent the coordinates of the samples and supplementary categories on the two first Principal Components (Dim1 and Dim2).
		The samples and categories are represented in black and purple, respectively. 
		The percentage of explained variance is given between brackets.<br>")
	cat(plotter$static_plot_main(id = "pca_data", custom_format = TRUE , resizable = TRUE, plotting_function = plot_mca_qual, plot_type = "autoplot" ))


end.rcode-->





<!--begin.rcode {{called_from}}_PCA_all, echo = FALSE,warning =FALSE, message=FALSE, results = 'asis', fig.width = 8, fig.height = 8, eval = !is.null(plotter$hash_vars$string_factors)
	
	cat(plotter$create_title("<b>Comparison of significant dimensions </b>", "all_pc", 
			hlevel = plotter$hash_vars$last_title + 2))
	
	cat("This plot compare the position of samples and their distribution in the significant PCs. 
		The color differenciate between the control (red) and treat (blue) samples.")
	dim_to_keep <- plotter$hash_vars$dim_to_keep 
	for (cual_var in unlist(quali_names)) {

		cat(plotter$static_plot_main(id = paste("dims", cual_var, sep = "_"), custom_format = TRUE ,resizable = TRUE, plot_type = "print", plotting_function = pairs_plot_pca))
	}


end.rcode-->

<!--begin.rcode {{called_from}}_mfa_quali, echo = FALSE, warning =FALSE, message=FALSE, results = 'asis', eval = plotter$hash_vars$multivar_type == "mfa"
	
	cat(plotter$create_title("<b>Coordinates of categories</b>", "main_quali_mfa", 
			hlevel = plotter$hash_vars$last_title + 2))
	cat("This plot represent the coordinates of the samples and supplementary categories on the two first Principal Components (Dim1 and Dim2).
		The samples are represented in blue and the categories of each supplementary group have the same color.  
		The percentage of explained variance is given between brackets.")
	cat(plotter$static_plot_main(id = "pca_data",custom_format = TRUE ,resizable = TRUE, plotting_function = plot_mfa_quali))

end.rcode-->



<!--begin.rcode {{called_from}}_dim_qual , echo = FALSE, warning =FALSE, message=FALSE, results = 'asis', fig.width = 5, fig.height = 5, eval = !is.null(plotter$hash_vars$string_factors)

	cat(plotter$create_title("<b>Association between qualitative variables and PCs</b>", "main_pc_quant", 
			hlevel = plotter$hash_vars$last_title + 2))

	cat("This plot represent the asociation between the qualitative variables and PCs. The association value is the R2 value. 
		The flags represent the significance measured with an analysis of variance where :
		* 0.01 < P < 0.05
		** 0.001 < P < 0.1
		*** P < 0.001 <br>")
	if (nrow(plotter$hash_vars$dim_data_qual) >0 ) {
		cat(plotter$static_plot_main(id = "dim_data_qual",custom_format = TRUE ,resizable = TRUE, plotting_function = plot_qual_heat))
	} else {
		cat("None of the factors was significantly associated with any PC")
	}
end.rcode-->


<!--begin.rcode {{called_from}}_dim_cat , echo = FALSE, warning =FALSE, message=FALSE, results = 'asis', fig.width = 5, fig.height = 5, eval = !is.null(plotter$hash_vars$string_factors)

	cat(plotter$create_title("<b>Association between categories and PCs</b>", "main_pc_quant", 
			hlevel = plotter$hash_vars$last_title + 2))
	cat("This plot represent the asociation between the categories of the qualitative variables and PCs. The association value is the mean coordinates of the samples within categories in PCs. 
		The flags represent the significance measured with a Student's t test where *: 0.01 < P < 0.05; ** 0.001 < P < 0.1; *** P < 0.001.<br>")
	
	if (nrow(plotter$hash_vars$dim_data_cat) > 0 ) {
		cat(plotter$static_plot_main(id = "dim_data_cat",custom_format = TRUE ,resizable = TRUE, plotting_function = plot_cat_heat))
	} else {
		cat("None of the categories was significantly associated with any PC")
	}

end.rcode-->


<!--begin.rcode {{called_from}}_dim_qual_act , echo = FALSE, warning =FALSE, message=FALSE, results = 'asis', fig.width = 5, fig.height = 5, eval = plotter$hash_vars$multivar_type %in% c("mca","mfa")

	cat(plotter$create_title("<b>TOP active qualitative variables</b>", "main_pc_qual_act", 
			hlevel = plotter$hash_vars$last_title + 2))
	cat("This table summarizes the top 10 active qualitative variables associated with PCs.<br>")
	
	if (nrow(plotter$hash_vars$dim_data_qual_act) > 0 ) {
		cat(plotter$prettify_div(plotter$table(list(id = "dim_data_qual_act", header = NULL, row_names = NULL, styled = "dt",
								 text ="dynamic", table_rownames = F)), preset = "magic", justify = "left"))
	} else {
		cat("None of the categories was significantly associated with any PC")
	}

end.rcode-->




<!--begin.rcode {{called_from}}_quant_vars_main, echo = FALSE, warning =FALSE, message=FALSE, results = 'asis', eval = !is.null(plotter$hash_vars$numeric_factors)

###################################################################################################################
#######################################    NUMERIC VARIABLES  #################################################

cat(plotter$create_title("<b>Numerical variables</b>", "num_var", 
			hlevel = plotter$hash_vars$last_title + 1, indexable = TRUE, clickable = FALSE, t_id = "num_var", clickable_text =""))

cat("This section explore the relationship between supplementary quantitative variables (-N option), samples and PCs.")
end.rcode-->

<!--begin.rcode {{called_from}}_check_quan, echo = FALSE, warning =FALSE, message=FALSE, results = 'asis',fig.width = 8, fig.height = 8, eval = is.null(plotter$hash_vars$numeric_factors)
	cat("Any supplementary quantitative variable was included on this analysis.")
end.rcode-->



<!--begin.rcode {{called_from}}_quant_pca , echo = FALSE, warning =FALSE, message=FALSE, results = 'asis', eval = !is.null(plotter$hash_vars$numeric_factors) && plotter$hash_vars$multivar_type == "pca"
	
	cat(plotter$create_title("<b>Quantitative variables in PCs</b>", "main_pc_quant", 
			hlevel = plotter$hash_vars$last_title + 2))
	cat("This plot represent the correlation between the supplementary quantitative variables and the two main PCs (Dim1 and Dim2). 
		The percentage of summarized variance is showed between brackets.<br>")
	cat(plotter$static_plot_main(id = "pca_data",custom_format = TRUE ,resizable = TRUE, plotting_function = plot_pca_quant))

end.rcode-->

 



<!--begin.rcode {{called_from}}_biplot, echo = FALSE, warning =FALSE, message=FALSE, results = 'asis', eval = !is.null(plotter$hash_vars$numeric_factors)&& plotter$hash_vars$multivar_type == "pca"

	cat(plotter$create_title("<b>Quantitative variables coordinates</b>", "main_pc_quant", 
			hlevel = plotter$hash_vars$last_title + 2))
		cat("This plot represent the coordinates of the supplementary quantitative variables on the two main PCs (Dim1 and Dim2). 
		The percentage of summarized variance is showed between brackets. 
		The samples are represented in black and the quantitative variables are represented by a dashed blue arrow<br>")
	cat(plotter$static_plot_main(id = "pca_data",custom_format = TRUE ,resizable = TRUE, plotting_function = plot_biplot_quant))

end.rcode-->

<!--begin.rcode {{called_from}}_mfa_quanti, echo = FALSE, warning =FALSE, message=FALSE, results = 'asis', eval = plotter$hash_vars$multivar_type == "mfa" && !is.null(plotter$hash_vars$numeric_factors)
	
	cat(plotter$create_title("<b>Quantitative variables coordinates</b>", "main_quali_mfa", 
			hlevel = plotter$hash_vars$last_title + 2))
	cat("This plot represent the coordinates of the supplementary quantitative variables on the two main PCs (Dim1 and Dim2). 
		The percentage of summarized variance is showed between brackets. 
		The samples are represented in black and the quantitative variables are represented by a dashed blue arrow<br>")

	cat(plotter$static_plot_main(id = "pca_data",custom_format = TRUE ,resizable = TRUE, width = 20,  height = 20, 
											   size_unit = "cm",plotting_function = plot_mfa_quanti))

end.rcode-->


<!--begin.rcode {{called_from}}_dim_quant , echo = FALSE, warning =FALSE, message=FALSE, results = 'asis', fig.width = 5, fig.height = 5, eval = !is.null(plotter$hash_vars$numeric_factors)

	cat(plotter$create_title("<b>Association between quantitative variables and PCs</b>", "main_pc_quant", 
		hlevel = plotter$hash_vars$last_title + 2))
	cat("This plot represent the asociation between the quantitative variables and PCs. 
		The association value is the Pearson's correlation and the flags indicate the correspondant significance where *: 0.01 < P < 0.05; ** 0.001 < P < 0.1; *** P < 0.001.<br>")
	
	if (nrow(plotter$hash_vars$dim_data_quant) > 0 ) {
		cat(plotter$static_plot_main(id = "dim_data_quant",custom_format = TRUE ,resizable = TRUE, plotting_function = plot_quant_heat))
	} else {
		cat("None of the factors was significantly associated with any PC")
	}

end.rcode-->

<!--begin.rcode {{called_from}}_dim_quant_act , echo = FALSE, warning =FALSE, message=FALSE, results = 'asis', fig.width = 5, fig.height = 5, eval = plotter$hash_vars$multivar_type %in% c("pca","mfa")

	cat(plotter$create_title("<b>TOP active quantitative variables</b>", "main_pc_quant_act", 
			hlevel = plotter$hash_vars$last_title + 2))
	cat("This table summarizes the top 10 active quantitative variables associated with PCs.<br>")
	
	if (nrow(plotter$hash_vars$dim_data_quant_act) > 0 ) {
		cat(plotter$prettify_div(plotter$table(list(id = "dim_data_quant_act", header = NULL, row_names = NULL,
			styled = "dt", text ="dynamic", table_rownames = FALSE)), preset = "magic", justify = "left"))	
	} else {
		cat("None of the factors was significantly associated with any PC")
	}

end.rcode-->




<!--begin.rcode {{called_from}}_hcpc_main, echo = FALSE, warning =FALSE, message=FALSE, results = 'asis'

###################################################################################################################
#######################################    HCPC  ##################################################################

cat(plotter$create_title("<b>HCPC</b>", "hcpc", 
			hlevel = plotter$hash_vars$last_title + 1, indexable = TRUE, clickable = FALSE, t_id = "hcpc", clickable_text =""))

cat(paste0("This section explore the groups of samples based on Hierarchical Clustering on Principal Components (HCPC) and the relationship of the clusters with supplementary variables.
	For the HCPC only the ", plotter$hash_vars$dim_to_keep, " first relevant PCs where used.</b>"))
end.rcode-->



<!--begin.rcode {{called_from}}_HCPC , echo = FALSE, warning =FALSE, message=FALSE, results = 'asis'

	cat(plotter$create_title(paste0("<b>Hierarchical clustering of individuals", plotter$hash_vars$dim_to_keep, " significant PCs</b>"), "main_pc_quant", 
			hlevel = plotter$hash_vars$last_title + 2))
	cat("This plot represent the dendrogram of HCPC of the individuals. The groups of individuals have different colors and the inertia plot is showed at the top right.<br>")
	cat(plotter$static_plot_main(id = "res.hcpc",custom_format = TRUE ,resizable = TRUE, plotting_function = plot_hcpc, plot_type = "autoplot" ))

end.rcode-->


<!--begin.rcode {{called_from}}_HCPC_map , echo = FALSE, warning =FALSE, message=FALSE, results = 'asis'

	cat(plotter$create_title("<b>HCPC coordinates</b>", "main_pc_quant", 
			hlevel = plotter$hash_vars$last_title + 2))
cat("This plot represent the coordinates of the samples in the two main Principal Components. 
		The percentage of summarized variance is showed between brackets. 
		The samples are colored by their HCPC cluster.<br>")
	cat(plotter$static_plot_main(id = "res.hcpc",custom_format = TRUE ,resizable = TRUE, plotting_function = plot_hcpc_map, plot_type = "autoplot" ))

end.rcode-->



<!--begin.rcode {{called_from}}_cluster_string , echo = FALSE, warning =FALSE, message=FALSE, results = 'asis'

	cat(plotter$create_title("<b>Relationship between HCPC clusters and supplementary qualitative variables</b>", "main_hcpc_qual", 
			hlevel = plotter$hash_vars$last_title + 2))

	cat("Fisher's exact test is computed between clusters and experimental treats. Fisher's exact test P values and FDR are showed.<br>")

	if (nrow(plotter$hash_vars$all_factor_clusters) > 0 ) {
		cat(plotter$table(list(id = "all_factor_clusters", header = NULL, row_names = NULL, styled = "dt", text = "dynamic", table_rownames = F)))

	} else {
		cat("None of the clusters was significanstly associated with any experimental group<br>")

	}
end.rcode-->


<!--begin.rcode {{called_from}}_cluster_num , echo = FALSE, warning =FALSE, message=FALSE, results = 'asis', eval = !is.null(plotter$hash_vars$numeric_factors)

cat(plotter$create_title("<b>Distribution of supplementary quantitative variables in HCPC clusters</b></b>", "main_hcpc_quant", 
			hlevel = plotter$hash_vars$last_title + 2))

clust <- plotter$hash_vars$res.hcpc$data.clust
target_clust <- merge(plotter$hash_vars$target, clust[,"clust", drop = F], by = "row.names")
rownames(target_clust) <- target_clust$Row.names
for (var in plotter$hash_vars$numeric_factors) {
	clust_var <- target_clust[,c(var,"clust")]
	plotter$hash_vars[["clust_var"]] <- clust_var
	cat(paste0("<b>", var, "</b><br>This plot shows the distribution of '",var,"' among the HCPC clusters."))
	cat(plotter$static_ggplot_main(id = "clust_var", header = NULL, row_names = NULL,resizable = TRUE, plotting_function = var_violin))

}
plotter$hash_vars[["clust_sum_var"]] <- NULL
end.rcode-->
