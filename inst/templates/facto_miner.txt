
<!--begin.rcode {{called_from}}_setup_facto_miner

### plotting_functions
inertia_plot <- function(ggplot_obj) { 
								ggplot_obj + 
								ggplot2::geom_bar(ggplot2::aes(x = names, y = var, fill = sig), stat = "identity") + 
								ggplot2::geom_line(ggplot2::aes(x = names, y = cum_var), stat = "identity", group = 1) + 
								ggplot2::labs(x = "", y = "Percentage of total variance") + 
								ggplot2::scale_y_continuous(sec.axis = ggplot2::sec_axis(~./100, 
																						name = "Cumulative percentage of variance", 
																						labels = scales::percent)) + 
								ggplot2::theme(legend.position = "bottom", 
															 axis.text.x = ggplot2::element_text(angle = 45, hjust = 1))
}

pairs_plot_pca <- function(data_frame) {
	pca_scatter <- function(data, mapping, ...){
		p <- ggplot2::ggplot(data, mapping)  
		p$mapping$alpha <- NULL
		p$mapping$color <- p$mapping$fill
		p + ggplot2::geom_point() + 
		ggplot2::geom_vline(xintercept = 0,  linetype="dashed")+ 
		ggplot2::geom_hline(yintercept = 0,  linetype="dashed")
	}
	p <- GGally::ggpairs(data_frame, columns = seq(2, dim_to_keep +1),  
		mapping = ggplot2::aes(fill = .data[[cual_var]], alpha = 0.5),
		lower = list(continuous = pca_scatter),
		upper = list(continuous = "blank"), 
		switch = "both") + 
		ggplot2::theme_bw() 
		leg <- ggpubr::get_legend(p[1,1])
		leg <- ggpubr::as_ggplot(leg)
		p <- GGally::putPlot(p, leg, 1, dim_to_keep)
	p[dim_to_keep, dim_to_keep] <- p[dim_to_keep, dim_to_keep] + ggplot2::coord_flip()
  p
}

plot_pca <- function(pca_data) {
	factoextra::fviz_pca_ind(pca_data, repel = TRUE)
}

plot_pca_hab <- function(pca_data) {
	factoextra::fviz_pca_ind(pca_data, repel = TRUE, habillage = main_cat)
}

plot_pca_qual <- function() {
	plot(FactoMineR::plot.PCA(data_frame, title = ""))
}

plot_mca_qual <- function() {
	plot(FactoMineR::plot.MCA(data_frame, title = "", invisible = "var"))
}

plot_pca_quant <- function(pca_data) {
	factoextra::fviz_pca_var(pca_data, axes = c(1, 2),select.var = list(name=plotter$hash_vars$numeric_factors), col.var="steelblue", title="") +
		ggplot2::theme_minimal()
}

plot_biplot_quant <- function(pca_data) {
	factoextra::fviz_pca_biplot(pca_data, repel = TRUE,select.var = list(name=plotter$hash_vars$numeric_factors), col.var="steelblue", title="") +
			ggplot2::theme_minimal()

}

plot_mca <- function(pca_data) {
	factoextra::fviz_mca_ind(pca_data, repel = TRUE)
}

plot_mca_hab <- function(pca_data) {
	factoextra::fviz_mca_ind(pca_data, repel = TRUE, habillage = main_cat)
}


plot_hcpc <- function(){
 plot(data_frame , choice="tree", title="")
}

plot_hcpc_map <- function(){
	plot(data_frame , axes=c(1,2), choice="map", draw.tree= FALSE, title="")
}

plot_quant_heat <- function(data_frame){
	gg_heatmap(data_frame, x_axis="dimension", y_axis="factor",fill = "correlation", 
		text_plot="text_corr", text_size = 4,
		col = c("#3b71ff", "#f1f1f1", "#ff3b3b"))
}

plot_qual_heat <- function(data_frame){
	gg_heatmap(data_frame, x_axis="dimension", y_axis="factor",fill = "R2", text_plot="text_adjust", text_size = 4,
		col = c("#3b71ff", "#f1f1f1", "#ff3b3b"))
}

plot_cat_heat <- function(data_frame){
	gg_heatmap(data_frame, x_axis="dimension", y_axis="factor",fill = "Estimate", text_plot="text_estimate", text_size = 4,
		col = c("#3b71ff", "#f1f1f1", "#ff3b3b") )
}


## inertia_plot
inertia <- as.data.frame(plotter$hash_vars$pca_data$eig)[,c(2,3)]
inertia$names <- factor(gsub("dim ", "PC", rownames(inertia)), levels= gsub("dim ", "PC", rownames(inertia)))
colnames(inertia) <- c("var", "cum_var", "names")
inertia$sig <- ifelse(rownames(inertia) %in% paste("dim", seq(1, plotter$hash_vars$dim_to_keep)), "significant", "no_significant")
plotter$hash_vars[["inertia"]] <- inertia

## pca_all
dims <- as.data.frame(plotter$hash_vars$pca_data$ind$coord)
colnames(dims) <- gsub("Dim.", "PC", colnames(dims))
inertia$text <- paste(inertia$names, "\n(", round(inertia$var, 2),"%)", sep = "")
colnames(dims)[colnames(dims) %in% inertia$names] <- inertia$text[match(colnames(dims), inertia$names)]
dims$names <- rownames(dims)
rownames(dims) <- NULL

if (!is.null(plotter$hash_vars$string_factors)) {

	quali_sup <- plotter$hash_vars$pca_data$call$X[,plotter$hash_vars$string_factors, drop = F]
	quali_names <- as.list(colnames(quali_sup))
	names(quali_names) <- paste("dims",colnames(quali_sup), sep = "_")
	quali_sup$names <- rownames(quali_sup)
	all_dims <- lapply(quali_names, function(var) {

		curr_dims <- merge(dims, quali_sup[,c("names",var)], by = "names")

	})
	plotter$hash_vars <- c(plotter$hash_vars, all_dims)
}


## HCPC 
plotter$hash_vars[["res_hcpc"]] <- FactoMineR::HCPC(plotter$hash_vars$pca_data, graph = FALSE)
all_factor_clusters <- get_cluster_string_assoc(plotter$hash_vars$res_hcpc, plotter$hash_vars$string_factors)
all_factor_clusters <- all_factor_clusters[all_factor_clusters$FDR <= 0.05,]

if (nrow(all_factor_clusters) > 0 ) {
	all_factor_clusters$FDR <- format(all_factor_clusters$FDR, scientific = TRUE, digits = 3)
	all_factor_clusters$fisher.test.pval <- format(all_factor_clusters$fisher.test.pval, scientific = TRUE, digits = 3)
	all_factor_clusters <- all_factor_clusters[,c("Cluster","Category","fisher.test.pval", "FDR")]
}
plotter$hash_vars[["all_factor_clusters"]] <- all_factor_clusters

## dim data quant

dim_data_quant <- plotter$hash_vars$dim_data_merged$quantitative
dim_data_quant <- dim_data_quant[dim_data_quant$factor %in% plotter$hash_vars$numeric_factors,]
if (nrow(dim_data_quant) > 0 ) {
	dim_data_quant$dimension <- gsub("Dim.", "PC", dim_data_quant$dimension)
	dim_data_quant$correlation <- round(dim_data_quant$correlation, digits = 2)
	dim_data_quant$significance <- ifelse(dim_data_quant$p.value < 0.001, "***",
					                ifelse(dim_data_quant$p.value < 0.01, "**",
				                    ifelse(dim_data_quant$p.value < 0.05, "*", "")))
	dim_data_quant$text_corr <- paste(as.character(dim_data_quant$correlation),as.character(dim_data_quant$significance), sep = " ")

}
plotter$hash_vars[["dim_data_quant"]] <- dim_data_quant

##dim data qual
dim_data_qual <- plotter$hash_vars$dim_data_merged$qualitative
if (nrow(dim_data_qual) >0 ) {
	dim_data_qual$dimension <- gsub("Dim.", "PC", dim_data_qual$dimension)
	dim_data_qual$R2 <- round(dim_data_qual$R2, digits = 3)
	dim_data_qual$significance <- ifelse(dim_data_qual$p.value < 0.001, "***",
					                ifelse(dim_data_qual$p.value < 0.01, "**",
				                    ifelse(dim_data_qual$p.value < 0.05, "*", "")))

	dim_data_qual$text_adjust <- paste(as.character(dim_data_qual$R2),as.character(dim_data_qual$significance), sep = " ")
}
plotter$hash_vars[["dim_data_qual"]] <- dim_data_qual


## dim data cat
dim_data_cat <- plotter$hash_vars$dim_data_merged$qual_category
if (nrow(dim_data_cat) > 0 ) {
	dim_data_cat$dimension <- gsub("Dim.", "PC", dim_data_cat$dimension)

	dim_data_cat$significance <- ifelse(dim_data_cat$p.value < 0.001, "***",
					                ifelse(dim_data_cat$p.value < 0.01, "**",
				                    ifelse(dim_data_cat$p.value < 0.05, "*", "")))
	dim_data_cat$text_estimate <- paste(round(dim_data_cat$Estimate, digits = 2),dim_data_cat$significance, sep = " ")
}
plotter$hash_vars[["dim_data_cat"]] <- dim_data_cat


end.rcode-->

<!--begin.rcode {{called_from}}_overview
###################################################################################################################
#######################################    OVERVIEW  ##############################################################
cat(plotter$create_title("<b>Overview</b>", "overview", 
			hlevel = plotter$hash_vars$last_title + 1, indexable = TRUE, clickable = FALSE, t_id = "overview", clickable_text =""))
cat("This section encompases a general overview of PCA application.")
end.rcode-->

<!--begin.rcode {{called_from}}_inertia_plot, echo = FALSE, warning =FALSE, message=FALSE, results = 'asis', fig.width = 5, fig.height = 4 
	cat(plotter$create_title("<b>1 Inertia plot exploring variance explained by dimensions</b>", "inertia_plot", 
			hlevel = plotter$hash_vars$last_title + 2))
	cat("Graphical representation of PCA dimensions. The bars represent the percentage of total variance that summarize each dimension. <br>
The line measures the percentage of total variance accumulated in previous dimensions. The color distinguishes between significan or no significant dimensions. <br>
Only significant dimensions will be considered in the following plots.<br>")

	cat(plotter$static_ggplot_main(id = "inertia", header = NULL, row_names = NULL,resizable = TRUE, plotting_function = inertia_plot))

end.rcode-->


<!--begin.rcode {{called_from}}_main_pca, echo = FALSE, warning =FALSE, message=FALSE, results = 'asis'
	
	cat(plotter$create_title("<b>2 Representation of the samples in the two first dimension of PCA</b>", "main_pc", 
		hlevel = plotter$hash_vars$last_title + 2))
	
	cat(plotter$static_plot_main(id = "pca_data",custom_format = TRUE ,resizable = TRUE, plotting_function = plot_pca))

end.rcode-->


<!--begin.rcode {{called_from}}_{{called_from}}_main_pca_hab, echo = FALSE, warning =FALSE, message=FALSE, results = 'asis', eval = !is.null(plotter$hash_vars$target) && plotter$hash_vars$multivar_type == "pca"
	cat("This is a simplified plot of the samples displayed in the two main principal components. The color of the samples indicates their experimental condition.")
	main_cat <- plotter$hash_vars$main_cat
	cat(plotter$static_plot_main(id = "pca_data", custom_format = TRUE, resizable = TRUE, plotting_function = plot_pca_hab))
end.rcode-->

<!--begin.rcode {{called_from}}_{{called_from}}_main_mca_hab, echo = FALSE, warning =FALSE, message=FALSE, results = 'asis', eval = !is.null(plotter$hash_vars$target) && plotter$hash_vars$multivar_type == "mca"
	main_cat <- plotter$hash_vars$main_cat
	cat("This is a simplified plot of the samples displayed in the two main principal components. The color of the samples indicates their experimental condition.")
	cat(plotter$static_plot_main(id = "pca_data", custom_format = TRUE, resizable = TRUE, plotting_function = plot_mca_hab))
end.rcode-->



<!--begin.rcode {{called_from}}_cat_vars_main, echo = FALSE, warning =FALSE, message=FALSE, results = 'asis'

###################################################################################################################
#######################################    CATEGORICAL VARIABLES  #################################################

cat(plotter$create_title("<b>Categorical variables</b>", "cat_var", 
			hlevel = plotter$hash_vars$last_title + 1, indexable = TRUE, clickable = FALSE, t_id = "cat_var", clickable_text =""))

cat("This section explore the relationship between supplementary categorical variables (-S option), samples and principal components.")
end.rcode-->


<!--begin.rcode {{called_from}}_qual_pca, echo = FALSE, warning =FALSE, message=FALSE, results = 'asis',fig.width = 8, fig.height = 8, eval = !is.null(plotter$hash_vars$string_factors) && plotter$hash_vars$multivar_type == "pca"

	cat(plotter$create_title("<b> 3 Representation of the samples and the categories of qualitative variables in the two first dimension of PCA</b>", "main_pc_qual", 
			hlevel = plotter$hash_vars$last_title + 2))

	cat(plotter$static_plot_main(id = "pca_data",custom_format = TRUE ,resizable = TRUE, plotting_function = plot_pca_qual, plot_type = "autoplot" ))


end.rcode-->




<!--begin.rcode {{called_from}}_qual_mca, echo = FALSE, warning =FALSE, message=FALSE, results = 'asis',fig.width = 8, fig.height = 8, eval = !is.null(plotter$hash_vars$string_factors) && plotter$hash_vars$multivar_type == "mca"

	cat(plotter$create_title("<b> 3 Representation of the samples and the categories of qualitative variables in the two first dimension of PCA</b>", "main_pc_qual", 
			hlevel = plotter$hash_vars$last_title + 2))

	cat(plotter$static_plot_main(id = "pca_data", custom_format = TRUE , resizable = TRUE, plotting_function = plot_mca_qual, plot_type = "autoplot" ))


end.rcode-->



<!--begin.rcode {{called_from}}_PCA_all, echo = FALSE,warning =FALSE, message=FALSE, results = 'asis', fig.width = 8, fig.height = 8, eval = !is.null(plotter$hash_vars$string_factors)
	
	cat(plotter$create_title("<b> 4 Comparison of significant dimensions </b>", "all_pc", 
			hlevel = plotter$hash_vars$last_title + 2))
	
	cat("This plot compare the position of samples and their distribution in the significant dimensions. The color differenciate between the control (red) and treat (blue) samples.")
	dim_to_keep <- plotter$hash_vars$dim_to_keep 
	for (cual_var in unlist(quali_names)) {
		cat(plotter$static_plot_main(id = paste("dims", cual_var, sep = "_"), custom_format = TRUE ,resizable = TRUE, plot_type = "print", plotting_function = pairs_plot_pca))
	}


end.rcode-->


<!--begin.rcode {{called_from}}_dim_qual , echo = FALSE, warning =FALSE, message=FALSE, results = 'asis', fig.width = 5, fig.height = 5, eval = !is.null(plotter$hash_vars$string_factors)

	cat(plotter$create_title("<b>5 Representation of R2 and P value of qualitative factors and PCA dimensions</b>", "main_pc_quant", 
			hlevel = plotter$hash_vars$last_title + 2))


	if (nrow(plotter$hash_vars$dim_data_qual) >0 ) {
		cat(plotter$static_plot_main(id = "dim_data_qual",custom_format = TRUE ,resizable = TRUE, plotting_function = plot_qual_heat))
	} else {
		cat("None of the factors were significantly associated with any dimension")
	}
end.rcode-->


<!--begin.rcode {{called_from}}_dim_cat , echo = FALSE, warning =FALSE, message=FALSE, results = 'asis', fig.width = 5, fig.height = 5, eval = !is.null(plotter$hash_vars$string_factors)

	cat(plotter$create_title("<b>6 Representation of estimated coordinated from barycentre and P value of qualitative factors and PCA dimensions</b>", "main_pc_quant", 
			hlevel = plotter$hash_vars$last_title + 2))

	if (nrow(plotter$hash_vars$dim_data_cat) > 0 ) {
		cat(plotter$static_plot_main(id = "dim_data_cat",custom_format = TRUE ,resizable = TRUE, plotting_function = plot_cat_heat))
	} else {
		cat("None of the categories were significantly associated with any dimension")
	}

end.rcode-->






<!--begin.rcode {{called_from}}_quant_vars_main, echo = FALSE, warning =FALSE, message=FALSE, results = 'asis', eval = !is.null(plotter$hash_vars$numeric_factors)

###################################################################################################################
#######################################    NUMERIC VARIABLES  #################################################

cat(plotter$create_title("<b>Numerical variables</b>", "num_var", 
			hlevel = plotter$hash_vars$last_title + 1, indexable = TRUE, clickable = FALSE, t_id = "num_var", clickable_text =""))

cat("This section explore the relationship between supplementary quantitative variables (-N option), samples and principal components.")
end.rcode-->



<!--begin.rcode {{called_from}}_quant_pca , echo = FALSE, warning =FALSE, message=FALSE, results = 'asis', eval = !is.null(plotter$hash_vars$numeric_factors) && plotter$hash_vars$multivar_type == "pca"
	
	cat(plotter$create_title("<b>7 Representation of the variable contribution to the PCA axis 1 and 2</b>", "main_pc_quant", 
			hlevel = plotter$hash_vars$last_title + 2))
	
	cat(plotter$static_plot_main(id = "pca_data",custom_format = TRUE ,resizable = TRUE, plotting_function = plot_pca_quant))

end.rcode-->

 



<!--begin.rcode {{called_from}}_biplot, echo = FALSE, warning =FALSE, message=FALSE, results = 'asis', eval = !is.null(plotter$hash_vars$numeric_factors)&& plotter$hash_vars$multivar_type == "pca"

	cat(plotter$create_title("<b>8 Representation of the individuals and the variable contribution to the PCA axis 1 and 2</b>", "main_pc_quant", 
			hlevel = plotter$hash_vars$last_title + 2))

	cat(plotter$static_plot_main(id = "pca_data",custom_format = TRUE ,resizable = TRUE, plotting_function = plot_biplot_quant))

end.rcode-->


<!--begin.rcode {{called_from}}_dim_quant , echo = FALSE, warning =FALSE, message=FALSE, results = 'asis', fig.width = 5, fig.height = 5, eval = !is.null(plotter$hash_vars$numeric_factors)

	cat(plotter$create_title("9 Representation of correlation and P value of numeric factors and PCA dimensions", "main_pc_quant", 
		hlevel = plotter$hash_vars$last_title + 2))

	if (nrow(plotter$hash_vars$dim_data_quant) > 0 ) {
		cat(plotter$static_plot_main(id = "dim_data_quant",custom_format = TRUE ,resizable = TRUE, plotting_function = plot_quant_heat))
	} else {
		cat("None of the factors were significantly associated with any dimension")
	}

end.rcode-->


<!--begin.rcode {{called_from}}_hcpc_main, echo = FALSE, warning =FALSE, message=FALSE, results = 'asis'

###################################################################################################################
#######################################    HCPC  ##################################################################

cat(plotter$create_title("<b>HCPC</b>", "hcpc", 
			hlevel = plotter$hash_vars$last_title + 1, indexable = TRUE, clickable = FALSE, t_id = "hcpc", clickable_text =""))

cat("This section explore the groups of samples based on Hierarchical Clustering on Principal Components (HCPC) and the relationship of the clusters with supplementary variables.")
end.rcode-->



<!--begin.rcode {{called_from}}_HCPC , echo = FALSE, warning =FALSE, message=FALSE, results = 'asis'

	cat(plotter$create_title(paste0("<b>10 Hierarchical clustering of individuals using first ", plotter$hash_vars$dim_to_keep, " significant PCA dimensions</b>"), "main_pc_quant", 
			hlevel = plotter$hash_vars$last_title + 2))

	cat(plotter$static_plot_main(id = "res_hcpc",custom_format = TRUE ,resizable = TRUE, plotting_function = plot_hcpc, plot_type = "autoplot" ))

end.rcode-->


<!--begin.rcode {{called_from}}_HCPC_map , echo = FALSE, warning =FALSE, message=FALSE, results = 'asis'

	cat(plotter$create_title(paste0("<b>11 PCA representation of 1 and 2 axis with individuals coloured by its cluster membership. The first ", plotter$hash_vars$dim_to_keep, "significant PCA dimensions are used for HCPC</b>"), "main_pc_quant", 
			hlevel = plotter$hash_vars$last_title + 2))

	cat(plotter$static_plot_main(id = "res_hcpc",custom_format = TRUE ,resizable = TRUE, plotting_function = plot_hcpc_map, plot_type = "autoplot" ))

end.rcode-->



<!--begin.rcode {{called_from}}_cluster_string , echo = FALSE, warning =FALSE, message=FALSE, results = 'asis'

	cat(plotter$create_title("12 Relationship between HCPC clusters and experiment design", "main_pc_quant", 
			hlevel = plotter$hash_vars$last_title + 2))

	cat("Fisher's exact test is computed between clusters and experimental treats. Fisher's exact test P values and FDR are showed.<br>")

	if (nrow(plotter$hash_vars$all_factor_clusters) > 0 ) {

		cat(plotter$table(list(id = "all_factor_clusters", header = NULL, row_names = NULL, styled = "dt")))

	} else {
		cat("None of the clusters were significantly associated with any experimental group<br>")

	}
end.rcode-->
