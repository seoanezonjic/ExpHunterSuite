
<!--begin.rcode config,
require(ggplot2)
require(knitr)
require(clusterProfiler)
require(enrichplot)
require(DOSE)
end.rcode-->

<!--begin.rcode child=file.path(template_folder, "func_initial_details.txt"), eval=!is.null(plotter$hash_vars$sample_classes)
end.rcode-->
<!--begin.rcode child=file.path(template_folder, "func_deg_details.txt"), eval=!is.null(plotter$hash_vars$sample_classes)
end.rcode-->

<h2> <strong>Overview of clusters</strong></h2>
The following table shows the numbers of prevalent vs. non-prevalent genes found in 
each cluster (first two columns), followed by the number  of significantly enriched 
categories found in each cluster for each of the annotation sources found using the ORA method (remaining columns).

<!--begin.rcode func_specific, echo=FALSE, results='asis', eval=!is.null(plotter$hash_vars$sample_classes)

# JRP - to decide - count entrez NAs to make consistent, or remove as not used for enrichements? For now we leave
# plotter$hash_vars$DEGH_results_clust_stats <- plotter$hash_vars$DEGH_results[! is.na(plotter$hash_vars$DEGH_results$entrezgene) &  plotter$hash_vars$DEGH_results$Cluster_ID != 0,]
plotter$hash_vars$DEGH_results_clust_stats <- plotter$hash_vars$DEGH_results[plotter$hash_vars$DEGH_results$Cluster_ID != 0,] 
prev_cluster <- t(base::table(plotter$hash_vars$DEGH_results_clust_stats$genes_tag, plotter$hash_vars$DEGH_results_clust_stats$Cluster_ID))
enr_per_cluster <- sapply(plotter$hash_vars$func_results$WGCNA_ORA_expanded, function(enr_list) {
  sapply(enr_list, nrow)
})
# Have to ensure row names match up
plotter$hash_vars$cluster_info <- as.data.frame(cbind(prev_cluster, enr_per_cluster[row.names(prev_cluster), ]))
cat(plotter$prettify_div(plotter$table(list(id = "cluster_info", header = NULL, row_names = NULL,
    styled = "dt", table_rownames = FALSE, text = FALSE)), preset = "magic"))
plotter$hash_vars$to_show <- plotter$hash_vars$DEGH_results[,c("Cluster_ID","SYMBOL","genes_tag",colnames(plotter$hash_vars$DEGH_results)[1])]
plotter$hash_vars$to_show$Cluster_ID <- as.character(plotter$hash_vars$to_show$Cluster_ID)
cat(plotter$prettify_div(plotter$table(list(id = "to_show", header = NULL, row_names = NULL,
    styled = "dt", table_rownames = FALSE, text = "dynamic")), preset = "magic"))

cat("<p>The following modules were run:</p>")
cat(htmlreportR:::make_html_list(list_content = plotter$hash_vars$flags_cluster))

cat("<p>Results were found in at least one module for the following:</p>")
plotter$hash_vars$results_cluster <- plotter$hash_vars$flags_cluster[plotter$hash_vars$flags_cluster==TRUE]
cat(htmlreportR:::make_html_list(list_content = plotter$hash_vars$results_cluster))
end.rcode-->

<!--begin.rcode multiple_children, echo=FALSE, results='asis'
res <- list()
for(funsys in names(plotter$hash_vars$flags_cluster)) {
  if(plotter$hash_vars$flags_cluster[[funsys]] == TRUE) {
    plotter$hash_vars$enrich_obj <- plotter$hash_vars$enrichments_ORA[[funsys]]
    exp_res <- knitr::knit_expand(file.path(template_folder, "ora_plots_compareCluster.txt"))
    res[[funsys]] <- knitr::knit(text=exp_res, quiet=TRUE)
  } else {
    res[[funsys]] <- paste0("<h2> <strong>No enrichment found for ", funsys, "</strong></h2>")
  }
}
cat(unlist(res), sep = '\n')

end.rcode-->
